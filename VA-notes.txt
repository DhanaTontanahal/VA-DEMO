
=======================================================================================
==========================================================================================
=========================================================================================


We are using Dialogflow CX Agent technology from Google Cloud
The Q&A we are able to do with the VA is help of knowledge base we have provided to the LLM underlying Dialogflow CX

The LLM is getting the answers from knowledge base we have provided and Augment
the reposnse with GEN AI LLM and providing us the response

As shown we have the Dialogflow CX Agent configured

So we use the code snippet generated by DialogFLOW CX to integratein our APP

The project shown is the banking project in my VScode running locally

We are using cloud services like Appwrite for Auth/DB
Plaid and Dwallo as other backend integration services

FE is Nextjs
VA technology is DialogFLowCX with custom knowledge base document


This is the knowledge base document I have provided to the DialogFLOWCX LLM


If we ask something irreleveant observe the response



CREATE DATABASE menu_logger;

USE menu_logger;

CREATE TABLE click_logs (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id VARCHAR(50),
    menu_name VARCHAR(50),
    click_date DATE,
    click_count INT DEFAULT 1,
    timestamps TEXT
);



USE menu_logger;

CREATE TABLE click_logs (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id VARCHAR(50),
    menu_name VARCHAR(50),
    click_date DATE,
    click_count INT DEFAULT 1,
    timestamps TEXT
);

CREATE TABLE items (
    item_id INT PRIMARY KEY,
    item_name VARCHAR(50)
);

INSERT INTO items (item_id, item_name) VALUES
(1001, 'Basic Credit Card'),
(1002, 'Travel Card'),
(1003, 'Student Card'),
(1004, 'Platinum Card');


SELECT * FROM items;

CREATE TABLE applications (
    application_id INT PRIMARY KEY,
    item_id INT,
    quantity INT
);

INSERT INTO applications (application_id, item_id, quantity) VALUES
(1234, 1001, 1),
(2345, 1002, 1),
(3456, 1004, 1);

SELECT * FROM applications;

CREATE TABLE application_status (
    application_id INT PRIMARY KEY,
    status VARCHAR(50)
);

INSERT INTO application_status (application_id, status) VALUES
(1234, 'InProgress'),
(2345, 'In Credit Review'),
(3456, 'Dispatched Card');

SELECT * FROM application_status;

CREATE TABLE users (
    user_id INT PRIMARY KEY AUTO_INCREMENT,
    user_email VARCHAR(100) NOT NULL UNIQUE,
    user_name VARCHAR(100) NOT NULL,
    dob DATE,
    mobile_num VARCHAR(15)
);

CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT NOT NULL,
    transaction_type VARCHAR(50) NOT NULL,
    transaction_amount DECIMAL(10, 2) NOT NULL,
    transaction_datetime DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

INSERT INTO users (user_email, user_name, dob, mobile_num) VALUES
('john.doe@example.com', 'John Doe', '1985-03-25', '1234567890'),
('jane.smith@example.com', 'Jane Smith', '1990-07-15', '0987654321');

SELECT * FROM users;

INSERT INTO transactions (user_id, transaction_type, transaction_amount, transaction_datetime) VALUES
-- 2023 Transactions
(1, 'Shopping', 120.50, '2023-01-15 10:45:30'),
(1, 'Pay Bill', 85.20, '2023-02-12 14:30:45'),
(1, 'Refund', 45.00, '2023-03-20 11:15:25'),
(1, 'Subscription', 30.75, '2023-03-10 16:40:00'),
(1, 'Transfer', 175.99, '2023-04-01 12:25:35'),
(1, 'Investment', 250.00, '2023-05-10 11:20:15'),
(2, 'Loan Payment', 135.45, '2023-06-20 10:10:40'),
(2, 'Shopping', 190.00, '2023-07-01 09:35:25'),
(2, 'Transfer', 80.20, '2023-08-15 14:50:30'),
(2, 'Pay Bill', 50.75, '2023-09-10 17:45:00'),

-- 2024 Transactions
(1, 'Shopping', 140.30, '2024-01-10 12:20:30'),
(1, 'Pay Bill', 100.50, '2024-02-12 16:15:00'),
(1, 'Refund', 50.00, '2024-03-10 10:00:00'),
(2, 'Subscription', 29.99, '2024-04-15 09:45:20'),
(2, 'Transfer', 300.00, '2024-05-18 18:10:10'),
(2, 'Shopping', 200.75, '2024-06-22 15:30:30'),
(1, 'Loan Payment', 150.45, '2024-07-25 10:15:45'),
(2, 'Investment', 500.00, '2024-08-10 13:10:50'),
(1, 'Pay Bill', 90.60, '2024-09-12 11:20:30'),
(1, 'Shopping', 275.00, '2024-10-15 14:40:00'),

-- 2025 Transactions
(2, 'Shopping', 210.80, '2025-01-20 13:15:25'),
(1, 'Subscription', 45.99, '2025-02-15 10:30:50'),
(1, 'Transfer', 600.00, '2025-03-12 12:25:30'),
(2, 'Investment', 800.00, '2025-04-20 17:10:40'),
(1, 'Refund', 75.20, '2025-05-15 09:50:15'),
(2, 'Loan Payment', 350.75, '2025-06-25 08:45:20'),
(1, 'Shopping', 300.00, '2025-07-10 11:15:10'),
(2, 'Pay Bill', 120.40, '2025-08-12 14:50:30'),
(1, 'Investment', 400.00, '2025-09-18 16:20:50'),
(2, 'Subscription', 60.00, '2025-10-22 18:10:40');

SELECT * FROM transactions;

SELECT * 
FROM transactions
WHERE user_id = 1
ORDER BY transaction_datetime DESC
LIMIT 5;



SELECT * FROM click_logs;

SET SQL_SAFE_UPDATES = 0;

delete from click_logs where user_id='user_123'






























=============================================
==========================START FROM HERE
=================

CREATE TABLE items (
    item_id INT PRIMARY KEY,
    item_name VARCHAR(50)
);


INSERT INTO items (item_id, item_name) VALUES
(1001, 'Basic Credit Card'),
(1002, 'Travel Card'),
(1003, 'Student Card'),
(1004, 'Platinum Card');


CREATE TABLE applications (
    application_id INT PRIMARY KEY,
    item_id INT,
    quantity INT
);


INSERT INTO applications (application_id, item_id, quantity) VALUES
(1234, 1001, 1),
(2345, 1002, 1),
(3456, 1004, 1);


CREATE TABLE application_status (
    application_id INT PRIMARY KEY,
    status VARCHAR(50)
);


INSERT INTO application_status (application_id, status) VALUES
(1234, 'InProgress'),
(2345, 'In Credit Review'),
(3456, 'Dispatched Card');



CREATE TABLE users (
    user_id INT PRIMARY KEY AUTO_INCREMENT,
    user_email VARCHAR(100) NOT NULL UNIQUE,
    user_name VARCHAR(100) NOT NULL,
    dob DATE,
    mobile_num VARCHAR(15)
);


CREATE TABLE transactions (
    transaction_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT NOT NULL,
    transaction_type VARCHAR(50) NOT NULL,
    transaction_amount DECIMAL(10, 2) NOT NULL,
    transaction_datetime DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);


INSERT INTO transactions (user_id, transaction_type, transaction_amount, transaction_datetime) VALUES
(1, 'Purchase', 120.50, '2023-01-15 10:45:30'),
(1, 'Purchase', 85.20, '2023-02-12 14:30:45'),
(1, 'Refund', 45.00, '2023-02-20 11:15:25'),
(1, 'Purchase', 200.00, '2023-03-05 09:50:10'),
(1, 'Refund', 30.75, '2023-03-10 16:40:00'),
(1, 'Purchase', 175.99, '2023-04-01 12:25:35'),
(1, 'Purchase', 90.50, '2023-04-15 18:15:20'),
(1, 'Refund', 15.00, '2023-05-05 13:40:50'),
(1, 'Purchase', 250.00, '2023-06-10 11:20:15'),
(1, 'Purchase', 135.45, '2023-06-20 10:10:40'),
(1, 'Refund', 70.30, '2023-07-15 15:25:10'),
(1, 'Purchase', 190.00, '2023-08-01 09:35:25'),
(1, 'Purchase', 80.20, '2023-08-15 14:50:30'),
(1, 'Refund', 50.75, '2023-09-10 17:45:00'),
(1, 'Purchase', 300.00, '2023-10-01 10:25:40'),
(2, 'Purchase', 100.25, '2023-01-20 09:15:00'),
(2, 'Refund', 40.00, '2023-02-15 11:50:45'),
(2, 'Purchase', 210.75, '2023-02-25 16:35:25'),
(2, 'Purchase', 150.30, '2023-03-12 10:20:35'),
(2, 'Refund', 25.50, '2023-03-30 14:50:20'),
(2, 'Purchase', 130.60, '2023-04-05 12:10:10'),
(2, 'Refund', 45.90, '2023-04-25 11:30:00'),
(2, 'Purchase', 260.15, '2023-05-15 18:45:50'),
(2, 'Purchase', 125.75, '2023-06-01 10:30:15'),
(2, 'Refund', 35.00, '2023-06-18 13:20:40'),
(2, 'Purchase', 140.50, '2023-07-25 09:40:25'),
(2, 'Purchase', 190.10, '2023-08-10 14:30:00'),
(2, 'Refund', 75.40, '2023-08-28 16:15:50'),
(2, 'Purchase', 310.20, '2023-09-05 12:25:35'),
(2, 'Purchase', 95.85, '2023-10-10 11:10:45');



INSERT INTO users (user_email, user_name, dob, mobile_num) VALUES
('john.doe@example.com', 'John Doe', '1985-03-25', '1234567890'),
('jane.smith@example.com', 'Jane Smith', '1990-07-15', '0987654321');


UPDATE users
SET user_id = 101
WHERE user_email = 'john.doe@example.com';

UPDATE users
SET user_id = 102
WHERE user_email = 'jane.smith@example.com';


INSERT INTO users (user_id, user_email, user_name, dob, mobile_num) VALUES
(101101, 'urwithdhanu@gmail.com', 'Dhanu', '1995-06-20', '9876543210');


INSERT INTO transactions (user_id, transaction_type, transaction_amount, transaction_datetime) VALUES
-- 2023 Transactions
(101101, 'Shopping', 120.50, '2023-01-15 10:45:30'),
(101101, 'Pay Bill', 85.20, '2023-02-12 14:30:45'),
(101101, 'Refund', 45.00, '2023-03-20 11:15:25'),
(101101, 'Subscription', 30.75, '2023-03-10 16:40:00'),
(101101, 'Transfer', 175.99, '2023-04-01 12:25:35'),
(101101, 'Investment', 250.00, '2023-05-10 11:20:15'),
(101101, 'Loan Payment', 135.45, '2023-06-20 10:10:40'),
(101101, 'Shopping', 190.00, '2023-07-01 09:35:25'),
(101101, 'Transfer', 80.20, '2023-08-15 14:50:30'),
(101101, 'Pay Bill', 50.75, '2023-09-10 17:45:00'),
(101101, 'Refund', 100.00, '2023-10-05 13:25:40'),

-- 2024 Transactions
(101101, 'Shopping', 150.00, '2024-01-12 10:25:00'),
(101101, 'Pay Bill', 75.00, '2024-02-08 14:40:00'),
(101101, 'Transfer', 200.00, '2024-03-15 12:30:00'),
(101101, 'Investment', 300.00, '2024-04-10 11:20:00'),
(101101, 'Loan Payment', 120.00, '2024-05-05 09:50:00'),

-- 2025 (January) Transactions
(101101, 'Shopping', 180.00, '2025-01-01 10:10:00'),
(101101, 'Pay Bill', 90.00, '2025-01-05 15:20:00'),
(101101, 'Transfer', 210.00, '2025-01-10 13:30:00'),
(101101, 'Subscription', 50.00, '2025-01-15 14:50:00'),
(101101, 'Refund', 60.00, '2025-01-20 11:45:00');



CREATE TABLE credit_card_balance (
    user_id INT PRIMARY KEY,
    card_number VARCHAR(16) NOT NULL UNIQUE,
    balance DECIMAL(12, 2) NOT NULL DEFAULT 0.00,
    last_updated DATETIME DEFAULT CURRENT_TIMESTAMP
);



INSERT INTO credit_card_balance (user_id, card_number, balance) VALUES
(1, '1234567890123456', 5000.00),
(2, '2345678901234567', 2500.50),
(101101, '3456789012345678', 10000.75);



CREATE TABLE card_payments (
    payment_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    payment_month DATE NOT NULL,
    payment_amount DECIMAL(5, 2) NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);



INSERT INTO card_payments (user_id, payment_month, payment_amount) VALUES
-- User 1 Payments
(1, '2023-01-01', 73.25),
(1, '2023-02-01', 89.50),
(1, '2023-03-01', 67.10),
(1, '2023-04-01', 95.75),
(1, '2023-05-01', 82.40),
(1, '2023-06-01', 74.30),
(1, '2023-07-01', 88.90),
(1, '2023-08-01', 60.75),
(1, '2023-09-01', 96.00),
(1, '2023-10-01', 79.25),
(1, '2023-11-01', 65.00),
(1, '2023-12-01', 99.15),
(1, '2024-01-01', 58.50),
(1, '2024-02-01', 75.60),
(1, '2024-03-01', 91.20),
(1, '2024-04-01', 86.45),
(1, '2024-05-01', 70.00),
(1, '2024-06-01', 99.90),
(1, '2024-07-01', 55.40),
(1, '2024-08-01', 88.30),
(1, '2024-09-01', 78.50),
(1, '2024-10-01', 62.75),
(1, '2024-11-01', 97.00),
(1, '2024-12-01', 80.15),

-- User 2 Payments
(2, '2023-01-01', 78.50),
(2, '2023-02-01', 85.20),
(2, '2023-03-01', 69.80),
(2, '2023-04-01', 95.25),
(2, '2023-05-01', 70.30),
(2, '2023-06-01', 88.10),
(2, '2023-07-01', 63.00),
(2, '2023-08-01', 99.15),
(2, '2023-09-01', 80.00),
(2, '2023-10-01', 54.50),
(2, '2023-11-01', 97.30),
(2, '2023-12-01', 65.90),
(2, '2024-01-01', 77.50),
(2, '2024-02-01', 90.10),
(2, '2024-03-01', 73.25),
(2, '2024-04-01', 88.40),
(2, '2024-05-01', 92.00),
(2, '2024-06-01', 55.70),
(2, '2024-07-01', 98.20),
(2, '2024-08-01', 65.40),
(2, '2024-09-01', 89.00),
(2, '2024-10-01', 76.50),
(2, '2024-11-01', 84.75),
(2, '2024-12-01', 67.00),

-- User 101101 Payments
(101101, '2023-01-01', 95.40),
(101101, '2023-02-01', 60.10),
(101101, '2023-03-01', 89.30),
(101101, '2023-04-01', 77.50),
(101101, '2023-05-01', 98.00),
(101101, '2023-06-01', 72.50),
(101101, '2023-07-01', 85.75),
(101101, '2023-08-01', 63.40),
(101101, '2023-09-01', 97.00),
(101101, '2023-10-01', 70.30),
(101101, '2023-11-01', 88.60),
(101101, '2023-12-01', 59.00),
(101101, '2024-01-01', 99.20),
(101101, '2024-02-01', 65.00),
(101101, '2024-03-01', 91.10),
(101101, '2024-04-01', 75.30),
(101101, '2024-05-01', 84.50),
(101101, '2024-06-01', 94.40),
(101101, '2024-07-01', 70.00),
(101101, '2024-08-01', 78.20),
(101101, '2024-09-01', 87.50),
(101101, '2024-10-01', 92.00),
(101101, '2024-11-01', 55.40),
(101101, '2024-12-01', 73.10);



CREATE TABLE credit_card_balance (
    user_id INT PRIMARY KEY,
    card_number VARCHAR(16) UNIQUE NOT NULL,
    current_balance DECIMAL(10, 2) NOT NULL DEFAULT 0.00,
    credit_limit DECIMAL(10, 2) NOT NULL DEFAULT 5000.00,
    last_updated DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);


INSERT INTO credit_card_balance (user_id, card_number, current_balance, credit_limit) VALUES
(1, '1234567890123456', 250.75, 5000.00),
(2, '2345678901234567', 1200.50, 7000.00),
(101101, '3456789012345678', 3500.00, 10000.00);
